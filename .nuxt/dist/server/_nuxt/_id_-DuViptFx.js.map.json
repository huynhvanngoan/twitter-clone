{"file":"_id_-DuViptFx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,UAAM,QAAQ;AAYd,UAAM,UAAU,SAAS,MAAM;;AAAA,0BAAM,UAAN,mBAAa,YAAW,CAAA;AAAA,KAAE;AAEzD,UAAM,oBAAoB,CAAC,UAAU;AACjC,iBAAW;AAAA,QACP,MAAM,WAAW,MAAM,EAAE;AAAA,MACjC,CAAK;AAAA,IACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA,UAAM,EAAE,aAAY,IAAK;AACzB,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,QAAQ,IAAI,IAAI;AAEtB,UAAM,EAAE,YAAW,IAAK;AACxB,UAAM,OAAO,YAAW;AAExB,UAAM,MAAM,SAAU,EAAC,UAAU,MAAM,SAAU,CAAA;AAEjD,UAAM,sBAAsB,MAAM;AAC9B,aAAO,SAAQ,EAAG,OAAO;AAAA,IAC7B;AAEA,UAAM,WAAW,YAAY;AACzB,cAAQ,QAAQ;AAChB,UAAI;AACA,cAAM,WAAW,MAAM,aAAa,oBAAqB,CAAA;AACzD,cAAM,QAAQ,SAAS;AAAA,MAC1B,SAAQ,OAAO;AACZ,gBAAQ,IAAI,KAAK;AAAA,MACzB,UAAc;AACN,gBAAQ,QAAQ;AAAA,MACnB;AAAA,IACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/Tweet/Details.vue","../../../../pages/status/[id].vue"],"sourcesContent":["<template>\r\n    <div v-if=\"tweet\">\r\n        <!-- Render tweet details -->\r\n        <TweetItem :tweet=\"props.tweet\" :user=\"props.user\" />\r\n        <TweetForm\r\n            :placeholder=\"`Tweet your reply`\"\r\n            :replyTo=\"props.tweet\"\r\n            :user=\"props.user\"\r\n            @on-success=\"handleFormSuccess\"\r\n        />\r\n\r\n        <TweetListFeed :tweets=\"replies\" />\r\n    </div>\r\n    <div v-else>\r\n        <!-- Handle the case where tweet is null -->\r\n        <p>No tweet available.</p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n    tweet: {\r\n        type: Object,\r\n        required: false,\r\n        default: null,\r\n    },\r\n    user: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst replies = computed(() => props.tweet?.replies || []);\r\n\r\nconst handleFormSuccess = (tweet) => {\r\n    navigateTo({\r\n        path: `/status/${tweet.id}`,\r\n    });\r\n};\r\n</script>\r\n","<template>\r\n    <div>\r\n        <MainSection title=\"Tweet\" :loading=\"loading\">\r\n            <Head>\r\n                <Title></Title>\r\n            </Head>\r\n\r\n            <!-- Ensure both tweet and user are available before rendering TweetDetails -->\r\n            <TweetDetails :tweet=\"tweet\" :user=\"user\" />\r\n        </MainSection>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nconst { getTweetById } = useTweet();\r\nconst loading = ref(false);\r\nconst tweet = ref(null);\r\n\r\nconst { useAuthUser } = useAuth();\r\nconst user = useAuthUser();\r\n\r\nwatch(() => useRoute().fullPath, () => getTweet());\r\n\r\nconst getTweetIdFromRoute = () => {\r\n    return useRoute().params.id;\r\n};\r\n\r\nconst getTweet = async () => {\r\n    loading.value = true;\r\n    try {\r\n        const response = await getTweetById(getTweetIdFromRoute());\r\n        tweet.value = response.tweet;\r\n    } catch (error) {\r\n        console.log(error);\r\n    } finally {\r\n        loading.value = false;\r\n    }\r\n};\r\n\r\nonBeforeMount(() => {\r\n     getTweet();\r\n});\r\n</script>\r\n"],"version":3}